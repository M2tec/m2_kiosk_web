
class Paypad {
    constructor(currentOperandTextElement) {
        this.currentOperandTextElement = currentOperandTextElement;
        this.clear();
        this.locale = 'en'
        const decimalSeperator = '.'
    }

    clear() {
        //console.log('clear()')
        this.currentOperand = '';
    }

    delete() {
        this.currentOperand = this.currentOperand.toString().slice(0, -1)
    }


    appendNumber(number) {
        //console.log('appendNumber()');
        if (number === '.' && this.currentOperand.includes('.')) return
        this.currentOperand = this.currentOperand.toString() + number.toString()
    }

    getDisplayNumber(number) {
        const stringNumber = number.toString()
        console.log("stringNumber: " + stringNumber);
        
        const integerDigits = parseFloat(stringNumber.split('.')[0])
        console.log("integerDigits: " + integerDigits);

        const decimalDigits = stringNumber.split('.')[1]
        console.log("decimalDigits: " + decimalDigits);
        
        
        
        let integerDisplay
        if (isNaN(integerDigits)) {
          integerDisplay = ''
        } else {
          integerDisplay = integerDigits.toLocaleString(this.locale, { maximumFractionDigits: 0 })
        }
        if (decimalDigits != null) {
          return `${integerDisplay}.${decimalDigits}`
        } else {
          return integerDisplay
        }
    }

  
    updateDisplay() {
        //console.log('updateDisplay');
        this.currentOperandTextElement.innerText = this.getDisplayNumber(this.currentOperand) 
    }
}

const currentOperandTextElement = document.querySelector('[data-input]')

const numberButtons = document.querySelectorAll('[data-action]')
const paypad = new Paypad(currentOperandTextElement)

numberButtons.forEach(button => {
  button.addEventListener('click', () => {
    paypad.appendNumber(button.innerText)
    paypad.updateDisplay()
  })
})

document.addEventListener('keyup', function (event) {
    let patternForNumbers = /[0-9]/g;
    
    console.log(event.key);
    
    if (event.key.match(patternForNumbers)) {
        event.preventDefault();
        paypad.appendNumber(event.key);
        paypad.updateDisplay();
        
        console.log('Number');
    }
  
    if (event.key === '.') {
        event.preventDefault();
        paypad.appendNumber(event.key)
        console.log('Dot');
    }
    
    if (event.key === "Backspace") {
        event.preventDefault();
        paypad.delete()
        paypad.updateDisplay()
    }
    
    if (event.key == 'Delete') {
        event.preventDefault();
        paypad.clear()
        paypad.updateDisplay()
    }    

    
    
    
  });
